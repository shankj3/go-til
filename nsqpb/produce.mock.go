// Code generated by MockGen. DO NOT EDIT.
// Source: produce.go

// Package nsqpb is a generated GoMock package.
package nsqpb

import (
	gomock "github.com/golang/mock/gomock"
	proto "github.com/golang/protobuf/proto"
	reflect "reflect"
)

// MockProducer is a mock of Producer interface
type MockProducer struct {
	ctrl     *gomock.Controller
	recorder *MockProducerMockRecorder
}

// MockProducerMockRecorder is the mock recorder for MockProducer
type MockProducerMockRecorder struct {
	mock *MockProducer
}

// NewMockProducer creates a new mock instance
func NewMockProducer(ctrl *gomock.Controller) *MockProducer {
	mock := &MockProducer{ctrl: ctrl}
	mock.recorder = &MockProducerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProducer) EXPECT() *MockProducerMockRecorder {
	return m.recorder
}

// WriteProto mocks base method
func (m *MockProducer) WriteProto(message proto.Message, topicName string) error {
	ret := m.ctrl.Call(m, "WriteProto", message, topicName)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteProto indicates an expected call of WriteProto
func (mr *MockProducerMockRecorder) WriteProto(message, topicName interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteProto", reflect.TypeOf((*MockProducer)(nil).WriteProto), message, topicName)
}
